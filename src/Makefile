# Makefile.in generated by automake 1.13.4 from Makefile.am.
# btdht/btutils/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/scout
pkgincludedir = $(includedir)/scout
pkglibdir = $(libdir)/scout
pkglibexecdir = $(libexecdir)/scout
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = btdht/btutils/src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build-aux/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libbtutils_a_AR = $(AR) $(ARFLAGS)
libbtutils_a_LIBADD =
am_libbtutils_a_OBJECTS = libbtutils_a-bencoding.$(OBJEXT) \
	libbtutils_a-bencparser.$(OBJEXT) \
	libbtutils_a-bitfield.$(OBJEXT) \
	libbtutils_a-bloom_filter.$(OBJEXT) \
	libbtutils_a-DecodeEncodedString.$(OBJEXT) \
	libbtutils_a-get_microseconds.$(OBJEXT) \
	libbtutils_a-inet_ntop.$(OBJEXT) \
	libbtutils_a-interlock.$(OBJEXT) \
	libbtutils_a-RefBase.$(OBJEXT) libbtutils_a-snprintf.$(OBJEXT) \
	libbtutils_a-sockaddr.$(OBJEXT) \
	libbtutils_a-udp_utils.$(OBJEXT)
libbtutils_a_OBJECTS = $(am_libbtutils_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libbtutils_a_SOURCES)
DIST_SOURCES = $(libbtutils_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/nhuang/git/scout/build-aux/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/nhuang/git/scout/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/nhuang/git/scout/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/nhuang/git/scout/build-aux/missing automake-1.13
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"scout\" -DPACKAGE_TARNAME=\"scout\" -DPACKAGE_VERSION=\"0.0.0\" -DPACKAGE_STRING=\"scout\ 0.0.0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"scout\" -DVERSION=\"0.0.0\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/nhuang/git/scout/build-aux/missing makeinfo
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = scout
PACKAGE_BUGREPORT = 
PACKAGE_NAME = scout
PACKAGE_STRING = scout 0.0.0
PACKAGE_TARNAME = scout
PACKAGE_URL = 
PACKAGE_VERSION = 0.0.0
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.0.0
abs_builddir = /home/nhuang/git/scout/btdht/btutils/src
abs_srcdir = /home/nhuang/git/scout/btdht/btutils/src
abs_top_builddir = /home/nhuang/git/scout
abs_top_srcdir = /home/nhuang/git/scout
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/nhuang/git/scout/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
lib_LIBRARIES = \
	libbtutils.a

libbtutils_a_SOURCES = \
	bench-json.h \
	bencoding.h \
	bencoding.cpp \
	bencparser.h \
	bencparser.cpp \
	bitfield.h \
	bitfield.cpp \
	bloom_filter.h \
	bloom_filter.cpp \
	DecodeEncodedString.h \
	DecodeEncodedString.cpp \
	endian_utils.h \
	enumtype.h \
	get_microseconds.h \
	get_microseconds.cpp \
	inet_ntop.h \
	inet_ntop.cpp \
	interlock.h \
	interlock.cpp \
	invariant_check.hpp \
	RefBase.h \
	RefBase.cpp \
	sha1_hash.h \
	smart_ptr.h \
	snprintf.h \
	snprintf.cpp \
	sockaddr.h \
	sockaddr.cpp \
	tailqueue.h \
	target.h \
	udp_utils.h \
	udp_utils.cpp \
	utypes.h

libbtutils_a_CXXFLAGS = -std=c++11
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu btdht/btutils/src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu btdht/btutils/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libbtutils.a: $(libbtutils_a_OBJECTS) $(libbtutils_a_DEPENDENCIES) $(EXTRA_libbtutils_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbtutils.a
	$(AM_V_AR)$(libbtutils_a_AR) libbtutils.a $(libbtutils_a_OBJECTS) $(libbtutils_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbtutils.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libbtutils_a-DecodeEncodedString.Po
include ./$(DEPDIR)/libbtutils_a-RefBase.Po
include ./$(DEPDIR)/libbtutils_a-bencoding.Po
include ./$(DEPDIR)/libbtutils_a-bencparser.Po
include ./$(DEPDIR)/libbtutils_a-bitfield.Po
include ./$(DEPDIR)/libbtutils_a-bloom_filter.Po
include ./$(DEPDIR)/libbtutils_a-get_microseconds.Po
include ./$(DEPDIR)/libbtutils_a-inet_ntop.Po
include ./$(DEPDIR)/libbtutils_a-interlock.Po
include ./$(DEPDIR)/libbtutils_a-snprintf.Po
include ./$(DEPDIR)/libbtutils_a-sockaddr.Po
include ./$(DEPDIR)/libbtutils_a-udp_utils.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libbtutils_a-bencoding.o: bencoding.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-bencoding.o -MD -MP -MF $(DEPDIR)/libbtutils_a-bencoding.Tpo -c -o libbtutils_a-bencoding.o `test -f 'bencoding.cpp' || echo '$(srcdir)/'`bencoding.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-bencoding.Tpo $(DEPDIR)/libbtutils_a-bencoding.Po
#	$(AM_V_CXX)source='bencoding.cpp' object='libbtutils_a-bencoding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-bencoding.o `test -f 'bencoding.cpp' || echo '$(srcdir)/'`bencoding.cpp

libbtutils_a-bencoding.obj: bencoding.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-bencoding.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-bencoding.Tpo -c -o libbtutils_a-bencoding.obj `if test -f 'bencoding.cpp'; then $(CYGPATH_W) 'bencoding.cpp'; else $(CYGPATH_W) '$(srcdir)/bencoding.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-bencoding.Tpo $(DEPDIR)/libbtutils_a-bencoding.Po
#	$(AM_V_CXX)source='bencoding.cpp' object='libbtutils_a-bencoding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-bencoding.obj `if test -f 'bencoding.cpp'; then $(CYGPATH_W) 'bencoding.cpp'; else $(CYGPATH_W) '$(srcdir)/bencoding.cpp'; fi`

libbtutils_a-bencparser.o: bencparser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-bencparser.o -MD -MP -MF $(DEPDIR)/libbtutils_a-bencparser.Tpo -c -o libbtutils_a-bencparser.o `test -f 'bencparser.cpp' || echo '$(srcdir)/'`bencparser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-bencparser.Tpo $(DEPDIR)/libbtutils_a-bencparser.Po
#	$(AM_V_CXX)source='bencparser.cpp' object='libbtutils_a-bencparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-bencparser.o `test -f 'bencparser.cpp' || echo '$(srcdir)/'`bencparser.cpp

libbtutils_a-bencparser.obj: bencparser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-bencparser.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-bencparser.Tpo -c -o libbtutils_a-bencparser.obj `if test -f 'bencparser.cpp'; then $(CYGPATH_W) 'bencparser.cpp'; else $(CYGPATH_W) '$(srcdir)/bencparser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-bencparser.Tpo $(DEPDIR)/libbtutils_a-bencparser.Po
#	$(AM_V_CXX)source='bencparser.cpp' object='libbtutils_a-bencparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-bencparser.obj `if test -f 'bencparser.cpp'; then $(CYGPATH_W) 'bencparser.cpp'; else $(CYGPATH_W) '$(srcdir)/bencparser.cpp'; fi`

libbtutils_a-bitfield.o: bitfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-bitfield.o -MD -MP -MF $(DEPDIR)/libbtutils_a-bitfield.Tpo -c -o libbtutils_a-bitfield.o `test -f 'bitfield.cpp' || echo '$(srcdir)/'`bitfield.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-bitfield.Tpo $(DEPDIR)/libbtutils_a-bitfield.Po
#	$(AM_V_CXX)source='bitfield.cpp' object='libbtutils_a-bitfield.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-bitfield.o `test -f 'bitfield.cpp' || echo '$(srcdir)/'`bitfield.cpp

libbtutils_a-bitfield.obj: bitfield.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-bitfield.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-bitfield.Tpo -c -o libbtutils_a-bitfield.obj `if test -f 'bitfield.cpp'; then $(CYGPATH_W) 'bitfield.cpp'; else $(CYGPATH_W) '$(srcdir)/bitfield.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-bitfield.Tpo $(DEPDIR)/libbtutils_a-bitfield.Po
#	$(AM_V_CXX)source='bitfield.cpp' object='libbtutils_a-bitfield.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-bitfield.obj `if test -f 'bitfield.cpp'; then $(CYGPATH_W) 'bitfield.cpp'; else $(CYGPATH_W) '$(srcdir)/bitfield.cpp'; fi`

libbtutils_a-bloom_filter.o: bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-bloom_filter.o -MD -MP -MF $(DEPDIR)/libbtutils_a-bloom_filter.Tpo -c -o libbtutils_a-bloom_filter.o `test -f 'bloom_filter.cpp' || echo '$(srcdir)/'`bloom_filter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-bloom_filter.Tpo $(DEPDIR)/libbtutils_a-bloom_filter.Po
#	$(AM_V_CXX)source='bloom_filter.cpp' object='libbtutils_a-bloom_filter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-bloom_filter.o `test -f 'bloom_filter.cpp' || echo '$(srcdir)/'`bloom_filter.cpp

libbtutils_a-bloom_filter.obj: bloom_filter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-bloom_filter.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-bloom_filter.Tpo -c -o libbtutils_a-bloom_filter.obj `if test -f 'bloom_filter.cpp'; then $(CYGPATH_W) 'bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom_filter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-bloom_filter.Tpo $(DEPDIR)/libbtutils_a-bloom_filter.Po
#	$(AM_V_CXX)source='bloom_filter.cpp' object='libbtutils_a-bloom_filter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-bloom_filter.obj `if test -f 'bloom_filter.cpp'; then $(CYGPATH_W) 'bloom_filter.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom_filter.cpp'; fi`

libbtutils_a-DecodeEncodedString.o: DecodeEncodedString.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-DecodeEncodedString.o -MD -MP -MF $(DEPDIR)/libbtutils_a-DecodeEncodedString.Tpo -c -o libbtutils_a-DecodeEncodedString.o `test -f 'DecodeEncodedString.cpp' || echo '$(srcdir)/'`DecodeEncodedString.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-DecodeEncodedString.Tpo $(DEPDIR)/libbtutils_a-DecodeEncodedString.Po
#	$(AM_V_CXX)source='DecodeEncodedString.cpp' object='libbtutils_a-DecodeEncodedString.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-DecodeEncodedString.o `test -f 'DecodeEncodedString.cpp' || echo '$(srcdir)/'`DecodeEncodedString.cpp

libbtutils_a-DecodeEncodedString.obj: DecodeEncodedString.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-DecodeEncodedString.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-DecodeEncodedString.Tpo -c -o libbtutils_a-DecodeEncodedString.obj `if test -f 'DecodeEncodedString.cpp'; then $(CYGPATH_W) 'DecodeEncodedString.cpp'; else $(CYGPATH_W) '$(srcdir)/DecodeEncodedString.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-DecodeEncodedString.Tpo $(DEPDIR)/libbtutils_a-DecodeEncodedString.Po
#	$(AM_V_CXX)source='DecodeEncodedString.cpp' object='libbtutils_a-DecodeEncodedString.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-DecodeEncodedString.obj `if test -f 'DecodeEncodedString.cpp'; then $(CYGPATH_W) 'DecodeEncodedString.cpp'; else $(CYGPATH_W) '$(srcdir)/DecodeEncodedString.cpp'; fi`

libbtutils_a-get_microseconds.o: get_microseconds.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-get_microseconds.o -MD -MP -MF $(DEPDIR)/libbtutils_a-get_microseconds.Tpo -c -o libbtutils_a-get_microseconds.o `test -f 'get_microseconds.cpp' || echo '$(srcdir)/'`get_microseconds.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-get_microseconds.Tpo $(DEPDIR)/libbtutils_a-get_microseconds.Po
#	$(AM_V_CXX)source='get_microseconds.cpp' object='libbtutils_a-get_microseconds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-get_microseconds.o `test -f 'get_microseconds.cpp' || echo '$(srcdir)/'`get_microseconds.cpp

libbtutils_a-get_microseconds.obj: get_microseconds.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-get_microseconds.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-get_microseconds.Tpo -c -o libbtutils_a-get_microseconds.obj `if test -f 'get_microseconds.cpp'; then $(CYGPATH_W) 'get_microseconds.cpp'; else $(CYGPATH_W) '$(srcdir)/get_microseconds.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-get_microseconds.Tpo $(DEPDIR)/libbtutils_a-get_microseconds.Po
#	$(AM_V_CXX)source='get_microseconds.cpp' object='libbtutils_a-get_microseconds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-get_microseconds.obj `if test -f 'get_microseconds.cpp'; then $(CYGPATH_W) 'get_microseconds.cpp'; else $(CYGPATH_W) '$(srcdir)/get_microseconds.cpp'; fi`

libbtutils_a-inet_ntop.o: inet_ntop.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-inet_ntop.o -MD -MP -MF $(DEPDIR)/libbtutils_a-inet_ntop.Tpo -c -o libbtutils_a-inet_ntop.o `test -f 'inet_ntop.cpp' || echo '$(srcdir)/'`inet_ntop.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-inet_ntop.Tpo $(DEPDIR)/libbtutils_a-inet_ntop.Po
#	$(AM_V_CXX)source='inet_ntop.cpp' object='libbtutils_a-inet_ntop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-inet_ntop.o `test -f 'inet_ntop.cpp' || echo '$(srcdir)/'`inet_ntop.cpp

libbtutils_a-inet_ntop.obj: inet_ntop.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-inet_ntop.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-inet_ntop.Tpo -c -o libbtutils_a-inet_ntop.obj `if test -f 'inet_ntop.cpp'; then $(CYGPATH_W) 'inet_ntop.cpp'; else $(CYGPATH_W) '$(srcdir)/inet_ntop.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-inet_ntop.Tpo $(DEPDIR)/libbtutils_a-inet_ntop.Po
#	$(AM_V_CXX)source='inet_ntop.cpp' object='libbtutils_a-inet_ntop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-inet_ntop.obj `if test -f 'inet_ntop.cpp'; then $(CYGPATH_W) 'inet_ntop.cpp'; else $(CYGPATH_W) '$(srcdir)/inet_ntop.cpp'; fi`

libbtutils_a-interlock.o: interlock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-interlock.o -MD -MP -MF $(DEPDIR)/libbtutils_a-interlock.Tpo -c -o libbtutils_a-interlock.o `test -f 'interlock.cpp' || echo '$(srcdir)/'`interlock.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-interlock.Tpo $(DEPDIR)/libbtutils_a-interlock.Po
#	$(AM_V_CXX)source='interlock.cpp' object='libbtutils_a-interlock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-interlock.o `test -f 'interlock.cpp' || echo '$(srcdir)/'`interlock.cpp

libbtutils_a-interlock.obj: interlock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-interlock.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-interlock.Tpo -c -o libbtutils_a-interlock.obj `if test -f 'interlock.cpp'; then $(CYGPATH_W) 'interlock.cpp'; else $(CYGPATH_W) '$(srcdir)/interlock.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-interlock.Tpo $(DEPDIR)/libbtutils_a-interlock.Po
#	$(AM_V_CXX)source='interlock.cpp' object='libbtutils_a-interlock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-interlock.obj `if test -f 'interlock.cpp'; then $(CYGPATH_W) 'interlock.cpp'; else $(CYGPATH_W) '$(srcdir)/interlock.cpp'; fi`

libbtutils_a-RefBase.o: RefBase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-RefBase.o -MD -MP -MF $(DEPDIR)/libbtutils_a-RefBase.Tpo -c -o libbtutils_a-RefBase.o `test -f 'RefBase.cpp' || echo '$(srcdir)/'`RefBase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-RefBase.Tpo $(DEPDIR)/libbtutils_a-RefBase.Po
#	$(AM_V_CXX)source='RefBase.cpp' object='libbtutils_a-RefBase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-RefBase.o `test -f 'RefBase.cpp' || echo '$(srcdir)/'`RefBase.cpp

libbtutils_a-RefBase.obj: RefBase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-RefBase.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-RefBase.Tpo -c -o libbtutils_a-RefBase.obj `if test -f 'RefBase.cpp'; then $(CYGPATH_W) 'RefBase.cpp'; else $(CYGPATH_W) '$(srcdir)/RefBase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-RefBase.Tpo $(DEPDIR)/libbtutils_a-RefBase.Po
#	$(AM_V_CXX)source='RefBase.cpp' object='libbtutils_a-RefBase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-RefBase.obj `if test -f 'RefBase.cpp'; then $(CYGPATH_W) 'RefBase.cpp'; else $(CYGPATH_W) '$(srcdir)/RefBase.cpp'; fi`

libbtutils_a-snprintf.o: snprintf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-snprintf.o -MD -MP -MF $(DEPDIR)/libbtutils_a-snprintf.Tpo -c -o libbtutils_a-snprintf.o `test -f 'snprintf.cpp' || echo '$(srcdir)/'`snprintf.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-snprintf.Tpo $(DEPDIR)/libbtutils_a-snprintf.Po
#	$(AM_V_CXX)source='snprintf.cpp' object='libbtutils_a-snprintf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-snprintf.o `test -f 'snprintf.cpp' || echo '$(srcdir)/'`snprintf.cpp

libbtutils_a-snprintf.obj: snprintf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-snprintf.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-snprintf.Tpo -c -o libbtutils_a-snprintf.obj `if test -f 'snprintf.cpp'; then $(CYGPATH_W) 'snprintf.cpp'; else $(CYGPATH_W) '$(srcdir)/snprintf.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-snprintf.Tpo $(DEPDIR)/libbtutils_a-snprintf.Po
#	$(AM_V_CXX)source='snprintf.cpp' object='libbtutils_a-snprintf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-snprintf.obj `if test -f 'snprintf.cpp'; then $(CYGPATH_W) 'snprintf.cpp'; else $(CYGPATH_W) '$(srcdir)/snprintf.cpp'; fi`

libbtutils_a-sockaddr.o: sockaddr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-sockaddr.o -MD -MP -MF $(DEPDIR)/libbtutils_a-sockaddr.Tpo -c -o libbtutils_a-sockaddr.o `test -f 'sockaddr.cpp' || echo '$(srcdir)/'`sockaddr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-sockaddr.Tpo $(DEPDIR)/libbtutils_a-sockaddr.Po
#	$(AM_V_CXX)source='sockaddr.cpp' object='libbtutils_a-sockaddr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-sockaddr.o `test -f 'sockaddr.cpp' || echo '$(srcdir)/'`sockaddr.cpp

libbtutils_a-sockaddr.obj: sockaddr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-sockaddr.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-sockaddr.Tpo -c -o libbtutils_a-sockaddr.obj `if test -f 'sockaddr.cpp'; then $(CYGPATH_W) 'sockaddr.cpp'; else $(CYGPATH_W) '$(srcdir)/sockaddr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-sockaddr.Tpo $(DEPDIR)/libbtutils_a-sockaddr.Po
#	$(AM_V_CXX)source='sockaddr.cpp' object='libbtutils_a-sockaddr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-sockaddr.obj `if test -f 'sockaddr.cpp'; then $(CYGPATH_W) 'sockaddr.cpp'; else $(CYGPATH_W) '$(srcdir)/sockaddr.cpp'; fi`

libbtutils_a-udp_utils.o: udp_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-udp_utils.o -MD -MP -MF $(DEPDIR)/libbtutils_a-udp_utils.Tpo -c -o libbtutils_a-udp_utils.o `test -f 'udp_utils.cpp' || echo '$(srcdir)/'`udp_utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-udp_utils.Tpo $(DEPDIR)/libbtutils_a-udp_utils.Po
#	$(AM_V_CXX)source='udp_utils.cpp' object='libbtutils_a-udp_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-udp_utils.o `test -f 'udp_utils.cpp' || echo '$(srcdir)/'`udp_utils.cpp

libbtutils_a-udp_utils.obj: udp_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -MT libbtutils_a-udp_utils.obj -MD -MP -MF $(DEPDIR)/libbtutils_a-udp_utils.Tpo -c -o libbtutils_a-udp_utils.obj `if test -f 'udp_utils.cpp'; then $(CYGPATH_W) 'udp_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/udp_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbtutils_a-udp_utils.Tpo $(DEPDIR)/libbtutils_a-udp_utils.Po
#	$(AM_V_CXX)source='udp_utils.cpp' object='libbtutils_a-udp_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbtutils_a_CXXFLAGS) $(CXXFLAGS) -c -o libbtutils_a-udp_utils.obj `if test -f 'udp_utils.cpp'; then $(CYGPATH_W) 'udp_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/udp_utils.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLIBRARIES install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
